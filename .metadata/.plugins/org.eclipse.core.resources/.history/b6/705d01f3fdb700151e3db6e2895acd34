package data;

import static helpers.Artist.HEIGHT;
import static helpers.Artist.quickLoad;
import helpers.Clock;

import org.lwjgl.input.Keyboard;
import org.lwjgl.input.Mouse;

public class Editor {

	private TileGrid grid;

	public Editor() {
		grid = new TileGrid();
	}

	public void update() {
		grid.draw();

		// Handle Mouse Input
		if (Mouse.isButtonDown(0) && !leftMouseButtonDown) {
			towerList.add(new TowerCannon(quickLoad("cannonBase"), grid
					.getTile(Mouse.getX() / 64,
							(HEIGHT - Mouse.getY() - 1) / 64), 10, waveManager
					.getCurrentWave().getEnemyList()));
			// setTile();
		}

		leftMouseButtonDown = Mouse.isButtonDown(0);
		// Handle Key Input
		while (Keyboard.next()) {
			if (Keyboard.getEventKey() == Keyboard.KEY_RIGHT
					&& Keyboard.getEventKeyState()) {
				Clock.ChangeMultiplier(0.2f);
			}
			if (Keyboard.getEventKey() == Keyboard.KEY_LEFT
					&& Keyboard.getEventKeyState()) {
				Clock.ChangeMultiplier(-0.2f);
			}
			if (Keyboard.getEventKey() == Keyboard.KEY_T
					&& Keyboard.getEventKeyState()) {
				towerList.add(new TowerCannon(quickLoad("cannonBase"), grid
						.getTile(18, 9), 10, waveManager.getCurrentWave()
						.getEnemyList()));
			}
		}
	}

	private void setTile() {
		grid.setTile((int) Math.floorDiv(Mouse.getX() / 64), (int) Math.floor((HEIGHT - Mouse.getY() - 1 / 64), types[index]);
	}
}
